
import numpy as np
import numpy
error=0.000001
if __name__ == '__main__':
    # 读入有向图，存储边
    f = open('data','r')
    edges = [line.strip('\n').split(' ') for line in f] #将读取内容逐行遍历,用空格符分离,统统用一个列表存起来。把首位的换行符全部消掉
    print("这是读入图edge：",edges) #把这个列表打印出来，这是读入的有向边表达
    # 根据边获取节点的集合
    nodes = []
    for edge in edges:
        if edge[0] not in nodes:
            nodes.append(edge[0])
        if edge[1] not in nodes:
            nodes.append(edge[1])
    print("有向图去重节点nodes：",nodes)  #获得一个不重复的节点列表

    N = len(nodes)

    # 将节点符号（字母），映射成阿拉伯数字，便于后面生成A矩阵/S矩阵
    i = 0
    NodeNum = {}  #利用集合特性不重复
    for node in nodes:
        NodeNum[node] = i #用value当计数器
        i += 1
    for edge in edges:
        edge[0] = NodeNum[edge[0]]
        edge[1] = NodeNum[edge[1]]
    print("有向图映射结果edges：",edges)  #将edges进行映射

    # 生成初步的S矩阵
    S = np.zeros([N, N])#先生成一个N行N列的0矩阵
    for edge in edges:
        S[edge[1], edge[0]] = 1
    print("生成初步矩阵S：",S)
    s=np.array(S)
    a1=np.array([1/(N**(1/2))]*N)
    b1=np.array([1/(N**(1/2))]*N)
    b2 = a1 * S
    a2 = b1 * S
    while((a1==a2).all()!=True and (b1==b2).all()!=True):
        a1=a2
        b1=b2
        a2=b2*S
        b2=a2*S
    if((a1==a2).all()):
        print("FinalResult：",a1)
    else:
        print("FinalResult：",b1)





